{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","startTimer","setInterval","setState","console","log","toLocaleTimeString","this","clearInterval","props","name","React","Component","randomNames","App","isVisible","showClock","hideClock","setNewName","newClockName","Math","floor","random","prevState","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,IAAIC,MAFrB,EAKEC,WAAaC,aACX,WACE,EAAKC,SAAS,CAAEJ,YAAa,IAAIC,OAEjCI,QAAQC,IAAI,EAAKP,MAAMC,YAAYO,wBAClC,KAVP,uDAaE,WACE,OAAOC,KAAKN,aAdhB,kCAiBE,WACEO,cAAcD,KAAKN,cAlBvB,oBAqBE,WACE,OACE,qCACE,6BAAKM,KAAKE,MAAMC,OAChB,gDACA,6BACGH,KAAKT,MAAMC,YAAYO,8BA3BlC,GAA2BK,IAAMC,WCN3BC,EAAc,CAAC,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,SA0DpDC,E,4MAlDbhB,MAAe,CACbiB,WAAW,EACXL,KAAM,a,EAGRM,UAAY,WACV,EAAKb,SAAS,CAAEY,WAAW,K,EAG7BE,UAAY,WACV,EAAKd,SAAS,CAAEY,WAAW,K,EAG7BG,WAAa,WACX,IAAMC,EAAY,eAAWN,EAAYO,KAAKC,MAAsB,EAAhBD,KAAKE,YAEzD,EAAKnB,UAAS,SAACoB,GAIb,OAFAnB,QAAQC,IAAR,qCAA0CkB,EAAUb,KAApD,eAA+DS,IAExD,CAAET,KAAMS,O,4CAInB,WACE,OACE,sBAAKK,UAAU,MAAf,UACE,6CAEA,wBAAQC,KAAK,SAASC,QAASnB,KAAKW,WAApC,6BAGA,uBAEA,wBAAQO,KAAK,SAASC,QAASnB,KAAKS,UAApC,wBAIA,wBAAQS,KAAK,SAASC,QAASnB,KAAKU,UAApC,wBAIGV,KAAKT,MAAMiB,WACZ,cAAC,EAAD,CAAOL,KAAMH,KAAKT,MAAMY,c,GA5ChBC,IAAMC,WCRxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.837b11da.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    currentTime: new Date(),\n  };\n\n  startTimer = setInterval(\n    () => {\n      this.setState({ currentTime: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.currentTime.toLocaleTimeString());\n    }, 1000,\n  );\n\n  componentDidMount() {\n    return this.startTimer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.startTimer);\n  }\n\n  render() {\n    return (\n      <>\n        <h2>{this.props.name}</h2>\n        <p> Current time: </p>\n        <h2>\n          {this.state.currentTime.toLocaleTimeString()}\n        </h2>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nconst randomNames = ['one', 'two', 'three', 'four', 'five', 'six', 'seven'];\n\ntype State = {\n  isVisible: boolean,\n  name: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isVisible: true,\n    name: 'Name-zero',\n  };\n\n  showClock = () => {\n    this.setState({ isVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isVisible: false });\n  };\n\n  setNewName = () => {\n    const newClockName = `Name-${randomNames[Math.floor(Math.random() * 7)]}`;\n\n    this.setState((prevState) => {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevState.name} to ${newClockName}`);\n\n      return { name: newClockName };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <button type=\"button\" onClick={this.setNewName}>\n          Set random name\n        </button>\n        <br />\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n\n        { (this.state.isVisible) && (\n          <Clock name={this.state.name} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}